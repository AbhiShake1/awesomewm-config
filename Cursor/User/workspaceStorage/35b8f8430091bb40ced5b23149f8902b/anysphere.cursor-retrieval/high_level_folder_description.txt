{"timestamp":1707755872840,"paths":["./README.md","./packages/sage_runners/sage_model_runner/README.md","./packages/sage_runners/sage_rfw_runner/README.md","./packages/youtube_player/README.md","./packages/sage_runners/sage_runner_annotations/README.md","./packages/sage_ui/README.md","./packages/sage_runners/sage_runner_utils/README.md","./packages/sage_lints/README.md","./android/build.gradle","./android/app/build.gradle","./packages/get_mac_address/android/build.gradle","./windows/runner/main.cpp","./ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md","./packages/sage_runners/sage_runner_utils/coverage_badge.svg","./packages/sage_runners/sage_runner_annotations/.github/ISSUE_TEMPLATE/performance.md","./.github/dependabot.yaml","./packages/sage_ui/lib/sage_ui.dart","./android/app/src/staging/res/mipmap-anydpi-v26/ic_launcher.xml","./packages/sage_runners/sage_runner_annotations/.github/ISSUE_TEMPLATE/build.md","./windows/runner/win32_window.cpp","./web/index.html","./web/manifest.json","./ios/Runner/Base.lproj/LaunchScreen.storyboard","./ios/Runner/Base.lproj/Main.storyboard","./packages/sage_runners/sage_runner_annotations/.github/ISSUE_TEMPLATE/documentation.md","./lib/constants/urls.dart","./lib/feature/food/food_page.dart","./android/app/src/main/res/values/styles.xml","./assets/verify-booking/booking.svg","./android/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml","./test/helpers/helpers.dart","./lib/app/providers/storage_provider.dart","./lib/feature/seat/widgets/modals/booking_confirmed_modal.dart","./macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","./lib/base/data/dao/sage_dao.dart","./test/app/widgets/sage_widget_test.dart","./test/utils/utils/device_info_util_test.dart","./.idea/codeStyles/codeStyleConfig.xml","./lib/feature/verify_booking/models/purchase_model.dart","./.github/workflows/flutter_package.yml","./packages/sage_runners/sage_runner_annotations/.github/ISSUE_TEMPLATE/bug_report.md","./lib/feature/booking_detail/models/booking_detail_model.dart","./ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json","./lib/app/widgets/inherited_widgets/inherited_widgets.dart","./packages/get_mac_address/test/get_mac_address_method_channel_test.dart","./android/app/src/staging/res/mipmap-anydpi-v26/ic_launcher_round.xml","./packages/sage_runners/sage_rfw_runner/lib/src/sage_local_widget_merger.dart","./packages/sage_runners/sage_model_runner/lib/src/sage_generated_model_merger.dart","./packages/sage_runners/sage_runner_annotations/lib/src/sage_model_annotations.dart","./packages/youtube_player/lib/src/video_util.dart","./lib/l10n/arb/app_es.arb","./android/app/src/development/res/mipmap-anydpi-v26/ic_launcher_round.xml","./ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","./ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","./.vscode/extensions.json","./lib/app/navigation/routes.dart","./lib/app/components/input_fields/sage_text_field.dart","./packages/get_mac_address/macos/Classes/GetMacAddressPlugin.swift","./assets/dialog-status/info.svg","./packages/get_mac_address/android/src/main/kotlin/com/example/get_mac_address/GetMacAddressPlugin.kt","./packages/sage_ui/lib/src/sage_ui.dart","./assets/dialog-status/success.svg","./packages/sage_runners/sage_runner_utils/lib/src/sage_runner_utils.dart","./lib/feature/auth/data/auth_repo.dart","./lib/feature/auth/data/auth_service.dart","./macos/Runner.xcodeproj/project.pbxproj","./macos/Flutter/Flutter-Release.xcconfig","./macos/Flutter/Flutter-Debug.xcconfig","./packages/sage_runners/sage_runner_utils/lib/sage_runner_utils.dart","./test/feature/auth/login_page_test.dart","./android/app/src/main/res/drawable/launch_background.xml","./android/app/src/main/res/drawable/ic_launcher_foreground.xml","./packages/sage_lints/.github/ISSUE_TEMPLATE/config.yml","./lib/utils/hooks/hooks.dart","./lib/utils/hooks/debounced.dart","./ios/Flutter/Debug.xcconfig","./lib/app/navigation/route_delegate.dart","./packages/sage_lints/.github/ISSUE_TEMPLATE/refactor.md","./packages/get_mac_address/ios/Classes/GetMacAddressPlugin.m","./packages/get_mac_address/ios/Classes/SwiftGetMacAddressPlugin.swift","./macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist","./test/utils/extensions/ref_extension_unit_test.dart","./test/utils/extensions/context_extensions_test.dart","./lib/feature/dashboard/data/dashboard_service.dart","./lib/feature/dashboard/data/dashboard_repo.dart","./packages/sage_runners/sage_rfw_runner/lib/src/sage_local_widget_generator.dart","./packages/sage_runners/sage_runner_utils/.github/ISSUE_TEMPLATE/performance.md","./lib/feature/commons/components/movie_chip.dart","./packages/get_mac_address/macos/get_mac_address.podspec","./packages/sage_runners/sage_runner_utils/.github/ISSUE_TEMPLATE/build.md","./packages/sage_runners/sage_runner_utils/.github/ISSUE_TEMPLATE/documentation.md","./lib/feature/seat/providers/seat_selection_provider.dart","./lib/feature/seat/providers/seat_detail_provider.dart","./lib/feature/seat/data/seat_dao.dart","./lib/feature/seat/data/seat_repo.dart","./packages/sage_runners/sage_runner_utils/.github/ISSUE_TEMPLATE/config.yml","./packages/get_mac_address/linux/CMakeLists.txt","./packages/sage_runners/sage_runner_utils/.github/ISSUE_TEMPLATE/refactor.md","./macos/Runner/Configs/AppInfo.xcconfig","./lib/l10n/arb/app_en.arb"]}
The folder `/home/abhi/proj/flutter/edm_flutter` contains a Flutter project named "Edm" with three flavors: development, staging, and production. The project structure is organized into various directories and files that serve different purposes.

The `README.md` file provides instructions on running the project with different flavors using commands like `flutter run --flavor development` and running tests with coverage reports using `flutter test --coverage`.

The `lib` directory contains the core application logic, with subdirectories for different features like authentication, booking details, dashboard, food, seat management, and more. It also includes directories for components, providers, and utilities like hooks and validators.

The `packages` directory includes various Dart/Flutter packages like `get_mac_address`, `sage_lints`, `sage_runners`, `sage_ui`, and `youtube_player`. Each package has its own README file detailing installation, continuous integration, and running tests.

The `android` directory contains the Android-specific configuration files like `build.gradle` and resource files for different flavors. The `assets` directory holds SVG files for dialog statuses and booking verification.

In the `ios` directory, there are configuration files for the iOS platform, including the `Runner.xcworkspace` for Xcode project settings and the `Assets.xcassets` directory for app icons and launch images.

The `macos` directory includes configuration files for macOS, such as `Flutter-Debug.xcconfig` and `Runner.xcodeproj` for Xcode project settings.

The `web` directory contains the `index.html` file for the web platform, with a script to install service workers for PWA functionality.

The `windows` directory includes the `runner` directory with C++ files for the Windows platform, like `main.cpp` for the main entry point of the application.

Overall, the project structure follows a modular approach with clear separation of concerns, making it easy to maintain and scale