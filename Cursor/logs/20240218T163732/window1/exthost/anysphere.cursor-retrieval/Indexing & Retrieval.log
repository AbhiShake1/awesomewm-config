2024-02-18 16:37:35.460 [error] Error: Command failed: git config --get remote.origin.url

	at ChildProcess.exithandler (node:child_process:430:12)
	at ChildProcess.emit (node:events:513:28)
	at maybeClose (node:internal/child_process:1091:16)
	at Socket.<anonymous> (node:internal/child_process:449:11)
	at Socket.emit (node:events:513:28)
	at Pipe.<anonymous> (node:net:322:12)
2024-02-18 16:37:35.462 [info] Running command: editHistoryDiffFormatter.ack with args: {}
2024-02-18 16:37:35.679 [info] Creating merkle client.
2024-02-18 16:37:35.679 [info] Done creating merkle client.
2024-02-18 16:37:35.679 [info] Doing a startup handshake.
2024-02-18 16:37:35.687 [info] Finished initializing merkle tree in 7.9967340007424355 ms.
2024-02-18 16:37:35.687 [info] Doing the initial handshake with hash: 8c94d97de64d80b77e0182a43fbed82b9b7a80c7fd4098082cdd66be43662060
2024-02-18 16:37:36.711 [info] Handshake result:
2024-02-18 16:37:36.711 [info] Starting fast remote sync.
2024-02-18 16:37:36.712 [info] Total num embeddable files: 11
2024-02-18 16:37:36.712 [info] Root hash: 8c94d97de64d80b77e0182a43fbed82b9b7a80c7fd4098082cdd66be43662060
2024-02-18 16:37:36.712 [info] Finished indexing repository.
2024-02-18 16:37:36.712 [info] Indexing job successfully done or aborted.
2024-02-18 16:37:52.555 [info] Running command: editHistoryDiffFormatter.ack with args: {}
2024-02-18 16:37:52.729 [info] Creating merkle client.
2024-02-18 16:37:52.729 [info] Done creating merkle client.
2024-02-18 16:37:52.729 [info] Doing a startup handshake.
2024-02-18 16:37:52.814 [info] Finished initializing merkle tree in 84.82521600276232 ms.
2024-02-18 16:37:52.814 [info] Doing the initial handshake with hash: 50213382ae6b86609895267ecedcc7cc677af3e5d815f57e9671235af871fbb6
2024-02-18 16:37:52.836 [warning] Error reading high level folder description. Ignoring. Error: ENOENT: no such file or directory, open '/home/abhi/.config/Cursor/User/workspaceStorage/35b8f8430091bb40ced5b23149f8902b/anysphere.cursor-retrieval/high_level_folder_description.txt'
2024-02-18 16:37:54.511 [info] Handshake result:
2024-02-18 16:37:54.511 [info] Starting fast remote sync.
2024-02-18 16:37:54.511 [info] Total num embeddable files: 501
2024-02-18 16:37:54.512 [info] Root hash: 50213382ae6b86609895267ecedcc7cc677af3e5d815f57e9671235af871fbb6
2024-02-18 16:37:54.512 [info] Starting repository upload from scratch.
2024-02-18 16:37:54.524 [info] Uploading 501 files.
2024-02-18 16:38:00.989 [info] Completed 50 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:01.295 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/components.dart"}
2024-02-18 16:38:01.360 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"lib/app/components/components.dart","currentModelValue":"export 'dialog/sage_dialog.dart';\nexport 'horizontal_scroller.dart';\nexport 'input_fields/input_fields.dart';\nexport 'sage_arc.dart';\nexport 'sage_button.dart';\nexport 'sage_calendar.dart';\nexport 'sage_card.dart';\nexport 'sage_divider.dart';\nexport 'sage_grid_view.dart';\nexport 'sage_image.dart';\nexport 'sage_list_tile.dart';\nexport 'sage_popup_menu.dart';\nexport 'sage_progress_bar.dart';\nexport 'sage_range_calendar.dart';\nexport 'sage_scaffold.dart';\nexport 'sage_snack_bar.dart';\nexport 'two_dimensional_grid_view.dart';\n"}
2024-02-18 16:38:03.078 [info] Completed 100 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:05.232 [info] Completed 150 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:05.731 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"searchinput"}
2024-02-18 16:38:05.817 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"searchinput","currentModelValue":"@recommended"}
2024-02-18 16:38:08.433 [info] Completed 200 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:11.861 [info] Completed 250 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:14.125 [info] Completed 300 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:16.687 [info] Completed 350 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:19.887 [info] Completed 400 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:23.076 [info] Completed 450 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:27.656 [info] Completed 500 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:31.218 [info] Completed 550 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:34.608 [info] Completed 600 jobs for absoluteDirectoryPath: undefined
2024-02-18 16:38:37.330 [info] Finished indexing repository.
2024-02-18 16:38:37.330 [info] Indexing job successfully done or aborted.
2024-02-18 16:38:39.115 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"git/scm0/input"}
2024-02-18 16:38:39.153 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"git/scm0/input","currentModelValue":""}
2024-02-18 16:38:45.707 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/components.dart"}
2024-02-18 16:39:02.469 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":""}
2024-02-18 16:39:02.508 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"","currentModelValue":"export 'input_fields/input_fields.dart';\nexport 'sage_arc.dart';\nexport 'sage_button.dart';\nexport 'sage_calendar.dart';\nexport 'sage_card.dart';\nexport 'sage_divider.dart';\nexport 'sage_grid_view.dart';\nexport 'sage_image.dart';"}
2024-02-18 16:39:55.536 [info] Running command: editHistoryDiffFormatter.ack with args: {}
2024-02-18 16:39:55.536 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/components.dart"}
2024-02-18 16:39:55.567 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"lib/app/components/components.dart","currentModelValue":"export 'dialog/sage_dialog.dart';\nexport 'horizontal_scroller.dart';\nexport 'input_fields/input_fields.dart';\nexport 'sage_arc.dart';\nexport 'sage_button.dart';\nexport 'sage_calendar.dart';\nexport 'sage_card.dart';\nexport 'sage_divider.dart';\nexport 'sage_grid_view.dart';\nexport 'sage_image.dart';\nexport 'sage_list_tile.dart';\nexport 'sage_popup_menu.dart';\nexport 'sage_progress_bar.dart';\nexport 'sage_range_calendar.dart';\nexport 'sage_scaffold.dart';\nexport 'sage_snack_bar.dart';\nexport 'two_dimensional_grid_view.dart';\n"}
2024-02-18 16:39:55.696 [info] Creating merkle client.
2024-02-18 16:39:55.696 [info] Done creating merkle client.
2024-02-18 16:39:55.697 [info] Doing a startup handshake.
2024-02-18 16:39:55.781 [info] Finished initializing merkle tree in 84.77719900012016 ms.
2024-02-18 16:39:55.802 [info] Doing the initial handshake with hash: 50213382ae6b86609895267ecedcc7cc677af3e5d815f57e9671235af871fbb6
2024-02-18 16:39:57.055 [info] Handshake result:
2024-02-18 16:39:57.055 [info] Starting fast remote sync.
2024-02-18 16:39:57.056 [info] Total num embeddable files: 501
2024-02-18 16:39:57.056 [info] Root hash: 50213382ae6b86609895267ecedcc7cc677af3e5d815f57e9671235af871fbb6
2024-02-18 16:39:57.056 [info] Finished indexing repository.
2024-02-18 16:39:57.056 [info] Indexing job successfully done or aborted.
2024-02-18 16:40:23.601 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"searchinput"}
2024-02-18 16:40:23.632 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"searchinput","currentModelValue":""}
2024-02-18 16:40:46.735 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:40:46.799 [info] Running command: editHistoryDiffFormatter.initModel with args: {"relativePath":"lib/app/components/sage_button.dart","currentModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n"}
2024-02-18 16:40:53.148 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:40:53.170 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"mport 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":2},"rangeLength":1,"text":"","rangeOffset":0,"forceMoveMarkers":true}}
2024-02-18 16:40:53.249 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:40:54.784 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:40:54.798 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},"rangeLength":0,"text":"i","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:40:54.849 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:40:56.123 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:40:56.125 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"mport 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":2},"rangeLength":1,"text":"","rangeOffset":0,"forceMoveMarkers":true}}
2024-02-18 16:40:56.200 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:40:57.038 [info] Running command: editHistoryDiffFormatter.isRevertingToRecentModel with args: {"relativePath":"lib/app/components/sage_button.dart","modelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n"}
2024-02-18 16:40:57.481 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:40:57.492 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},"rangeLength":0,"text":"i","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:40:57.552 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:00.813 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:00.828 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":37},"rangeLength":36,"text":"","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:41:00.884 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:01.628 [info] Running command: editHistoryDiffFormatter.isRevertingToRecentModel with args: {"relativePath":"lib/app/components/sage_button.dart","modelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n"}
2024-02-18 16:41:01.916 [info] Running command: editHistoryDiffFormatter.getModelValueInRanges with args: {"relativePath":"lib/app/components/sage_button.dart","ranges":[{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},{"startColumn":1,"startLineNumber":1,"endColumn":1,"endLineNumber":1},{"startColumn":1,"startLineNumber":1,"endColumn":1,"endLineNumber":3}]}
2024-02-18 16:41:01.936 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:01.954 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},"rangeLength":0,"text":"import 'package:edm/base/base.dart';","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:41:02.024 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:02.544 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:02.548 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":37},"rangeLength":36,"text":"","rangeOffset":0,"forceMoveMarkers":true}}
2024-02-18 16:41:02.623 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:03.406 [info] Running command: editHistoryDiffFormatter.isRevertingToRecentModel with args: {"relativePath":"lib/app/components/sage_button.dart","modelValue":"import 'package:edm/base/base.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n"}
2024-02-18 16:41:03.789 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:03.790 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},"rangeLength":0,"text":"import 'package:edm/base/base.dart';","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:41:03.852 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:04.950 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:04.983 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":3},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":2,"endColumn":1},"rangeLength":37,"text":"","rangeOffset":0,"forceMoveMarkers":true}}
2024-02-18 16:41:05.097 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:05.658 [info] Running command: editHistoryDiffFormatter.getModelValue with args: {"relativePath":"lib/app/components/sage_button.dart"}
2024-02-18 16:41:05.700 [info] Running command: editHistoryDiffFormatter.processModelChange_LOOKS_SYNC_BUT_IS_REALLY_ASYNC with args: {"relativePath":"lib/app/components/sage_button.dart","newModelValue":"import 'package:edm/base/base.dart';\nimport 'package:edm/constants/dimens.dart';\nimport 'package:edm/utils/extensions.dart';\n\n@sageLocalWidget\nclass SageButton extends StatelessWidget {\n  const SageButton({\n    required this.text,\n    required this.onPressed,\n    this.isDisabled = false,\n    this.expanded = true,\n    this.color,\n    this.textStyle,\n    this.textColor,\n    this.disabledColor,\n    this.borderRadius,\n    this.padding,\n    this.iconAssetUrl,\n    super.key,\n  });\n\n  final String text;\n  final VoidCallback onPressed;\n  final bool expanded;\n  final Color? color;\n  final Color? disabledColor;\n  final Color? textColor;\n  final TextStyle? textStyle;\n  final bool isDisabled;\n  final double? borderRadius;\n  final EdgeInsets? padding;\n  final String? iconAssetUrl;\n\n  @override\n  Widget build(BuildContext context) {\n    final btnColorDisabled = disabledColor ?? context.color.surface20;\n    final effectiveTextColor = textColor ?? context.color.scaffoldBackground.inverted;\n    return ElevatedButton(\n      style: ButtonStyle(\n        backgroundColor: MaterialStateProperty.all(isDisabled ? btnColorDisabled : color ?? context.color.primary),\n        shape: MaterialStateProperty.all(\n          RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(borderRadius ?? d_borderRadius),\n          ),\n        ),\n        padding: MaterialStateProperty.all(padding),\n        minimumSize: !expanded ? null : MaterialStateProperty.all(const Size(double.infinity, d_buttonHeight)),\n      ),\n      onPressed: isDisabled ? null : onPressed,\n      child: Row(\n        mainAxisSize: MainAxisSize.min,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          if (iconAssetUrl != null) ...[\n            SageImage.asset(url: iconAssetUrl!, width: d_iconSm, height: d_iconSm, color: effectiveTextColor),\n            d_margin05.widthBox,\n          ],\n          Text(\n            text,\n            style: textStyle ?? TextStyle(color: effectiveTextColor),\n          ),\n        ],\n      ),\n    );\n  }\n}\n\n@sageLocalWidget\nclass SageIconButton extends StatelessWidget {\n  const SageIconButton({required this.svgUrl, required this.onPressed, this.color, super.key});\n\n  final String svgUrl;\n  final VoidCallback onPressed;\n  final Color? color;\n\n  @override\n  Widget build(BuildContext context) {\n    return InkWell(\n      onTap: onPressed,\n      child: SageImage.asset(url: svgUrl),\n    );\n  }\n}\n","deletedRangeInOldModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":2},"addedRangeInNewModelOneIndexed":{"startLineNumber":1,"endLineNumberExclusive":3},"change":{"range":{"startLineNumber":1,"startColumn":1,"endLineNumber":1,"endColumn":1},"rangeLength":0,"text":"import 'package:edm/base/base.dart';\n","rangeOffset":0,"forceMoveMarkers":false}}
2024-02-18 16:41:05.784 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:19.614 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:20.514 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:21.939 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:33.411 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:34.267 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:37.137 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
2024-02-18 16:41:48.091 [info] Running command: editHistoryDiffFormatter.compileGlobalDiffTrajectories with args: {}
